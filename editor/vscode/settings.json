{
  // 文件合并
  "explorer.experimental.fileNesting.enabled": true,
  "explorer.experimental.fileNesting.expand": false,
  "explorer.experimental.fileNesting.patterns": {
    ".gitignore": ".gitattributes, .gitmodules, .gitmessage, .mailmap, .git-blame*",
    "*.js": "$(capture).js.map, $(capture).min.js, $(capture).d.ts",
    "*.jsx": "$(capture).js",
    "*.ts": "$(capture).js, $(capture).*.ts",
    "*.tsx": "$(capture).ts",
    "*.vue": "$(capture).*.ts, $(capture).*.js",
    "index.d.ts": "*.d.ts",
    "shims.d.ts": "*.d.ts",
    "*.cpp": "$(capture).hpp, $(capture).h, $(capture).hxx",
    "*.cxx": "$(capture).hpp, $(capture).h, $(capture).hxx",
    "*.cc": "$(capture).hpp, $(capture).h, $(capture).hxx",
    "*.c": "$(capture).h",
    "go.mod": ".air*, go.sum",
    "default.nix": "shell.nix",
    "flake.nix": "flake.lock",
    "BUILD.bazel": "*.bzl, *.bazel, *.bazelrc, bazel.rc, .bazelignore, .bazelproject, WORKSPACE",
    "CMakeLists.txt": "*.cmake, *.cmake.in, .cmake-format.yaml, CMakePresets.json",
    ".clang-tidy": ".clang-format",
    ".env": "*.env, .env.*, env.d.ts",
    "dockerfile": ".dockerignore, dockerfile*",
    "package.json": ".browserslist*, .circleci*, .codecov, .commitlint*, .editorconfig, .eslint*, .firebase*, .flowconfig, .github*, .gitlab*, .gitpod*, .huskyrc*, .jslint*, .lintstagedrc*, .markdownlint*, .mocha*, .node-version, .nodemon*, .npm*, .nvmrc, .pm2*, .pnp.*, .pnpm*, .prettier*, .releaserc*, .sentry*, .stackblitz*, .styleci*, .stylelint*, .tazerc*, .textlint*, .tool-versions, .travis*, .vscode*, .watchman*, .xo-config*, .yamllint*, .yarnrc*, api-extractor.json, appveyor*, ava.config.*, azure-pipelines*, bower.json, build.config.*, commitlint*, crowdin*, cypress.json, dangerfile*, dprint.json, firebase.json, grunt*, gulp*, jasmine.*, jenkins*, jest.config.*, jsconfig.*, karma*, lerna*, lint-staged*, nest-cli.*, netlify*, nodemon*, nx.*, package-lock.json, playwright.config.*, pm2.*, pnpm*, prettier*, pullapprove*, puppeteer.config.*, renovate*, rollup.config.*, stylelint*, tsconfig.*, tsdoc.*, tslint*, tsup.config.*, turbo*, typedoc*, vercel*, vetur.config.*, vitest.config.*, webpack.config.*, workspace.json, xo.config.*, yarn*",
    "rush.json": ".browserslist*, .circleci*, .codecov, .commitlint*, .editorconfig, .eslint*, .firebase*, .flowconfig, .github*, .gitlab*, .gitpod*, .huskyrc*, .jslint*, .lintstagedrc*, .markdownlint*, .mocha*, .node-version, .nodemon*, .npm*, .nvmrc, .pm2*, .pnp.*, .pnpm*, .prettier*, .releaserc*, .sentry*, .stackblitz*, .styleci*, .stylelint*, .tazerc*, .textlint*, .tool-versions, .travis*, .vscode*, .watchman*, .xo-config*, .yamllint*, .yarnrc*, api-extractor.json, appveyor*, ava.config.*, azure-pipelines*, bower.json, build.config.*, commitlint*, crowdin*, cypress.json, dangerfile*, dprint.json, firebase.json, grunt*, gulp*, jasmine.*, jenkins*, jest.config.*, jsconfig.*, karma*, lerna*, lint-staged*, nest-cli.*, netlify*, nodemon*, nx.*, package-lock.json, playwright.config.*, pm2.*, pnpm*, prettier*, pullapprove*, puppeteer.config.*, renovate*, rollup.config.*, stylelint*, tsconfig.*, tsdoc.*, tslint*, tsup.config.*, turbo*, typedoc*, vercel*, vetur.config.*, vitest.config.*, webpack.config.*, workspace.json, xo.config.*, yarn*",
    "readme.*": "authors, backers.md, changelog*, citation*, code_of_conduct.md, codeowners, contributing.md, contributors, copying, credits, governance.md, history.md, license*, maintainers, readme*, security.md, sponsors.md",
    "cargo.toml": ".clippy.toml, .rustfmt.toml, cargo.lock, clippy.toml, cross.toml, rust-toolchain.toml, rustfmt.toml",
    "gemfile": ".ruby-version, gemfile.lock",
    "composer.json": ".php*.cache, composer.lock, phpunit.xml*, psalm*.xml",
    "vite.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .htmlnanorc*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.json, env.d.ts, htmlnanorc.*, index.html, jasmine.*, jest.config.*, jsconfig.*, karma*, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "vue.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .htmlnanorc*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.json, env.d.ts, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "nuxt.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .htmlnanorc*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.json, env.d.ts, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "next.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .htmlnanorc*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.json, env.d.ts, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, next-env.d.ts, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*, next-i18next.config.js, i18next-parser.config.js",
    "svelte.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .htmlnanorc*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.json, env.d.ts, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, mdsvex.config.js, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "remix.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .htmlnanorc*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.json, env.d.ts, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, playwright.config.*, postcss.config.*, puppeteer.config.*, remix.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "artisan": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .htmlnanorc*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.json, env.d.ts, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, playwright.config.*, postcss.config.*, puppeteer.config.*, server.php, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, webpack.mix.js, windi.config.*",
    "astro.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .htmlnanorc*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.json, env.d.ts, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*"
  },
  // leetcode
  "leetcode.workspaceFolder": "/Users/eqielb/Sites/wuwb/docs/src/series/leetcode",
  "leetcode.endpoint": "leetcode-cn",
  "leetcode.filePath": {
    "default": {
      "folder": "${id}",
      "filename": "${id}.${kebab-case-name}.${ext}"
    }
  },
  // 拼写检查
  "cSpell.userWords": [
    "Popconfirm",
    "VARCHAR",
    "ahooks",
    "antd",
    "autoload",
    "datetime",
    "esnext",
    "formily",
    "prettierrc",
    "siteapp",
    "stylelintrc",
    "thinkphp",
    "topthink",
    "umijs",
    "umirc",
    "yahei",
    "Alioss",
    "Alipay",
    "Aliyun",
    "antd",
    "autoload",
    "autopush",
    "badboys",
    "bloginfo",
    "blogtongdelovecom",
    "btech",
    "customizer",
    "datetime",
    "dowu",
    "dropin",
    "Eggjs",
    "encryptor",
    "entrypoints",
    "errcode",
    "errmsg",
    "firstname",
    "frontmatter",
    "geoip",
    "hasher",
    "healthcheck",
    "immer",
    "ipcidr",
    "juhe",
    "Koajs",
    "laravel",
    "lastname",
    "lazyload",
    "letsencrypt",
    "Lingjing",
    "loadbalancer",
    "metatype",
    "middlewares",
    "midwayjs",
    "mogu",
    "Mult",
    "multisite",
    "nameserver",
    "nestjs",
    "nprogress",
    "Pinia",
    "pnpm",
    "Popconfirm",
    "postpass",
    "printlake",
    "printlakecom",
    "qrcode",
    "redir",
    "reduxjs",
    "Sider",
    "socketio",
    "tailwindcss",
    "taobao",
    "Teamtalk",
    "tencent",
    "tinyint",
    "tinypixelco",
    "tongdelove",
    "tongdelovecom",
    "tongji",
    "traefik",
    "ttrss",
    "typegoose",
    "typeorm",
    "Unlimit",
    "userid",
    "varchar",
    "vmess",
    "vuepress",
    "vuex",
    "Wakeable",
    "Wechat",
    "Wenbin",
    "woocommerce",
    "wpapi",
    "wuwb"
  ],
  "cSpell.ignorePaths": [
    "**/package-lock.json",
    "**/node_modules/**",
    "**/vscode-extension/**",
    "**/.git/objects/**",
    ".vscode",
    "**/vendor/**",
    "**/.umi/**",
    "**/.ice/**"
  ],
  // 文件 exclude
  "intelephense.files.exclude": [
    "**/.git/**",
    "**/.svn/**",
    "**/.hg/**",
    "**/CVS/**",
    "**/.DS_Store/**",
    "**/node_modules/**",
    "**/bower_components/**",
    "**/vendor/**/{Tests,tests}/**",
    "**/.history/**",
    "**/vendor/**",
    "**/.umi/**",
    "**/.ice/**"
  ],
  // project manager
  "gitProjectManager.baseProjectsFolders": ["~/Projects", "~/Sites", "~/Tests"],

  // 保存时候格式化
  "editor.defaultFormatter": "esbenp.prettier-vscode",
  "editor.formatOnSave": true,
  "editor.formatOnPaste": false,
  "editor.codeActionsOnSave": {
    // "source.organizeImports": true,
    "source.fixAll.eslint": true
  },
  // 文件类型格式化模板
  "[typescriptreact]": {
    "editor.defaultFormatter": "vscode.typescript-language-features"
  },
  "[typescript]": {
    "editor.defaultFormatter": "vscode.typescript-language-features"
  },
  "[json]": {
    "editor.defaultFormatter": "vscode.json-language-features"
  },
  "[javascript]": {
    "editor.defaultFormatter": "rvest.vs-code-prettier-eslint"
  },
  // 编辑器功能
  "editor.suggestSelection": "first",
  "editor.inlineSuggest.enabled": true,
  "editor.accessibilitySupport": "off",
  "eslint.format.enable": true,
  "eslint.packageManager": "pnpm",

  // 其他
  "workbench.editor.enablePreviewFromQuickOpen": true,
  "files.insertFinalNewline": true,
  "explorer.confirmDragAndDrop": false,
  "redhat.telemetry.enabled": true,
  "editor.fontSize": 14,
  "python.languageServer": "Default",
  "terminal.integrated.gpuAcceleration": "on",
  "git.autofetch": "all",
  "workbench.editorAssociations": {
    "*.ipynb": "jupyter.notebook.ipynb"
  },
  "notebook.lineNumbers": "on",
  "explorer.confirmDelete": false,
  "workbench.colorTheme": "One Dark Pro Flat",
  "telemetry.telemetryLevel": "crash",
  "workbench.iconTheme": "material-icon-theme",
  "files.exclude": {
    "**/.umi/**": true,
    "**/.idea/**": true,
    "**/.project": true,
    "**/.settings": true,
    "**/.classpath": true,
    "**/.factorypath": true
  },
  "files.watcherExclude": {
    "**/.umi/**": true,
    "**/dist/**": true,
    "**/node_modules/**": true
  },
  "search.exclude": {
    "**/.umi": true,
    "**/dist": true,
    "**/node_modules": true
  },
  "workbench.editor.untitled.hint": "hidden",
  "github.copilot.enable": {
    "markdown": true,
    "*": true,
    "plaintext": true,
    "yaml": true
  },
  // 启动时候更新
  "update.mode": "start",
  "scm.inputFontSize": 16,
  "debug.console.fontSize": 16,
  "markdown.preview.fontSize": 16,
  "terminal.integrated.fontSize": 16,
  "workbench.startupEditor": "none",
  "javascript.updateImportsOnFileMove.enabled": "never",
  "security.workspace.trust.untrustedFiles": "open",
  "gitlens.codeLens.enabled": false,
  "editor.stickyScroll.enabled": false, // 固定时候固定配对行在头部
  "scss.lint.unknownAtRules": "ignore",
  "editor.unicodeHighlight.allowedCharacters": {
    "，": true
  },
  "hardhat.telemetry": true,
  // 侧边栏显示
  "workbench.activityBar.visible": true,
  // 侧边栏插件左边显示
  "activitusbar.alignment": "Left"
}
