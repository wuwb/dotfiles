###############################################################################
# => General
###############################################################################

# set vs set-option: set is the alias of set-option
# et -g is used to set global options and -ga appends values to existing settings.
# set-window-option (alias setw) 

# paste
set -g default-command "reattach-to-user-namespace -l zsh"

# improve colors
set -g default-terminal 'screen-256color'
set -g default-terminal "xterm-256color"

# act like vim, Use vim keybindings in copy mode
# Vi-style keybinds
set -g status-keys vi
set -g mode-keys   vi
setw -g mode-keys  vi

########################################
# Core                             #
########################################

set -q -g status-utf8 on
setw -q -g utf8 on

# Address vim-mode switching delay (http://superuser.com/a/252717/65504)
set -g repeat-time 0
set -sg repeat-time 600                   # increase repeat timeout

# increase scrollback lines
set -g history-limit 10000 # boost history

# show tmux messages for 4 seconds
set -g display-time 4000

# For terminals that support them, propagate these events to programs that
# understand them.
# focus events enabled for terminals that support them
set -g focus-events on

# super useful when using "grouped sessions" and multi-monitor setup
setw -g aggressive-resize on


# Default terminal is 256 colors
# Scrolling works as expected
# set -g terminal-overrides 'xterm*:smcup@:rmcup@'

set -g @yank_selection_mouse 'clipboard'

# Clipetty config
set -ag update-environment "SSH_TTY"


set -g @continuum-restore 'on'
set -g @resurrect-capture-pane-contents 'on'

# Modify prefix_highlight prompt
set -g @prefix_highlight_prefix_prompt ' '
set -g @prefix_highlight_copy_prompt ' '
set -g @prefix_highlight_sync_prompt ' '

# set status bar theme
set -g @tmux-maglev-theme 'light'

# Direnv setup https://github.com/direnv/direnv/wiki/Tmux
set -g update-environment "DIRENV_DIFF DIRENV_DIR DIRENV_WATCHES"
set-environment -gu DIRENV_DIFF
set-environment -gu DIRENV_DIR
set-environment -gu DIRENV_WATCHES
set-environment -gu DIRENV_LAYOUT

# Controlling yank behavior, do not exit after yanking
set -g @yank_action 'copy-pipe'

# Keep windows around after they exit
set -g remain-on-exit on

# #################################################################################################
# TPM plugins
# #################################################################################################

# tmux-plugins/tmux-battery
# https://github.com/christoomey/vim-tmux-navigator
set -g @tpm_plugins '                     \
    ztlevi/maglev                         \
    soyuka/tmux-current-pane-hostname     \
    tmux-plugins/tpm                      \
    tmux-plugins/tmux-sensible            \
    tmux-plugins/tmux-resurrect           \
    tmux-plugins/tmux-continuum           \
    tmux-plugins/tmux-pain-control        \
    tmux-plugins/tmux-copycat             \
    tmux-plugins/tmux-yank                \
    tmux-plugins/tmux-open                \
    tmux-plugins/tmux-cpu                 \
    tmux-plugins/tmux-prefix-highlight    \
    christoomey/vim-tmux-navigator        \
'
# set -g @plugin 'christoomey/vim-tmux-navigator'
# Other examples:
# set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# Initialize TMUX plugin manager
# (keep this line at the very bottom of tmux.conf)
# run "$XDG_DATA_HOME/tmux/plugins/tpm/tpm"
run "~/.local/share/tmux/plugins/tpm"


########################################
# Keybinds                             #
# bind -n 表示绑定到全局，不需要 <prefix>
# bind -r 表示可以重复
########################################


############# prefix 设置

# Screen like binding，键位绑定，类似 vim 的命令模式
# C-b + ? 查看所有可用的命令及相应的快捷键
# 默认是 C-b，这里配置成 C-a
unbind C-b
set -g prefix C-a
bind C-a send-prefix

############# 启用鼠标

# mouse behavior, Enable mouse + mouse wheel
# Turn the mouse on, but without copy mode dragging
set -g mouse on # Enable mouse mode (tmux 2.1 and above)
setw -g mouse on # Enable mouse mode (tmux 2.1 and above)
set -g mode-mouse on   #For tmux versions < 2.1
unbind -n MouseDrag1Pane
unbind -Tcopy-mode MouseDrag1Pane


# Some extra key bindings to select higher numbered windows
bind F1 selectw -t:10
bind F2 selectw -t:11
bind F3 selectw -t:12
bind F4 selectw -t:13
bind F5 selectw -t:14
bind F6 selectw -t:15
bind F7 selectw -t:16
bind F8 selectw -t:17
bind F9 selectw -t:18
bind F10 selectw -t:19
bind F11 selectw -t:20
bind F12 selectw -t:21



######### 窗口管理

# A key to toggle between smallest and largest sizes if a window is visible in
# multiple places
bind F set -w window-size







bind C-y command-prompt -p 'save history to filename:' -I '~/tmux.history' 'capture-pane -S -32768 ; save-buffer %1 ; delete-buffer'

bind C-[ copy-mode
bind c confirm-before -p "kill-pane #P (y/n)" kill-pane
bind C-c confirm kill-session

# reload config without killing server
bind r refresh-client
bind R source-file $TMUX_HOME/tmux.conf \; display-message "  Config reloaded..".

# Combine clear and clear history
bind -n C-l send C-l \; run-shell "sleep .3s" \; clear-history

# Switch to last window
bind -T prefix tab switch-client -l

# Switch tmux window and session
bind -T prefix C-t choose-tree -Zw
bind . choose-window
bind -n M-H previous-window
bind -n M-L next-window
bind -n M-J switch-client -n
bind -n M-K switch-client -p
bind -n C-S-Left previous-window
bind -n C-S-Right next-window
bind -n C-S-Down switch-client -n
bind -n C-S-Up switch-client -p

# Swap panes directionally
# 可以自定义切换方法，bind H run '$TMUX_HOME/swap-pane.sh left'
bind H run 'tmux-swap-pane left'
bind J run 'tmux-swap-pane down'
bind K run 'tmux-swap-pane up'
bind L run 'tmux-swap-pane right'
bind M run 'tmux-swap-pane master'


# ---- keybinds ------------------------------------------------------------------------

# edit configuration
bind e new-window -n '~/.tmux.conf.local' "sh -c '\${EDITOR:-vim} ~/.tmux.conf.local && tmux source ~/.tmux.conf && tmux display \"~/.tmux.conf sourced\"'"
bind C-x setw synchronize-panes

# ---- display ------------------------------------------------------------------------

# 快速调整窗口到全屏
unbind Up
bind Up new-window -d -n tmp \; swap-pane -s tmp.1 \; select-window -t tmp
unbind Down
bind Down last-window \; swap-pane -s tmp. \; kill-window -t tmp

bind C-l send 'C-l'

# -------------------------------- color begin --------------------------------

set -g status "on"



# tmux-cssh
# easily toggle synchronization (mnemonic: e is for echo)
# sends input to all panes in a given window. 
# bind = setw synchronize-panes
bind e setw synchronize-panes on
bind E setw synchronize-panes off

# Do not exit after mouse drag
unbind   -T copy-mode MouseDragEnd1Pane
unbind   -T copy-mode-vi MouseDragEnd1Pane

# 退出
bind q confirm kill-window
bind Q kill-server


# set first window to index 1 (not 0) to map more to the keyboard layout...
set -g base-index 1
setw -g pane-base-index 1


# color scheme (styled as vim-powerline)


bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

set -g prefix2 C-s

# start window numbers at 1 to match keyboard order with tmux window order
# 窗口号和窗口分割号都以1开始（默认从0开始）
# Zero-based indexing is fine in programming languages, but not so much in a
# multiplexer when zero is on the other side of the keyboard.
set -g base-index 1 # start windows numbering at 1
setw -g pane-base-index 1
set -g pane-base-index 1 # make pane numbering consistent with windows
setw -g pane-base-index 1

# renumber windows sequentially after closing any of them
set -g renumber-windows on

# prefix -> back-one-character
bind C-b send-prefix
# prefix-2 -> forward-incremental-history-search
bind C-s send-prefix -2

# don't suspend-client
unbind C-z

# Ring the bell if any background window rang a bell
set -g bell-action any # 可选 none，禁用 bells

# True color and Italic support https://github.com/syl20bnr/spacemacs/wiki/Terminal
# Default termtype. If the rcfile sets $TERM, that overrides this value.
set -g default-terminal screen-256color
set -g terminal-overrides ',xterm-24bit:Tc'

# Keep your finger on ctrl, or don't
bind ^D detach-client

# Use vi keybindings for tmux commandline input.
# Note that to get command mode you need to hit ESC twice...
set -g status-keys vi





bind S choose-session
bind W choose-window
bind / choose-session
bind . choose-window


# Disable confirmation
bind x kill-pane
bind X kill-window
bind q kill-session
bind Q kill-server

bind -n C-\\ if-shell "$is_vim" "send C-\\" "select-pane -l"
bind C-w last-pane
bind C-n next-window
bind C-p previous-window

# break pane into a window
bind = select-layout even-vertical
bind + select-layout even-horizontal
bind - break-pane
bind _ join-pane

# reload config without killing server
bind r source-file $DOTFILES/config/tmux/tmux.conf \; display-message "  Config reloaded..".
bind ^r refresh-client







############## 窗口管理

# bind = select-layout tiled
bind | select-layout even-horizontal
bind _ select-layout even-vertical

# Create splits and vertical splits
bind v split-window -h -p 50 -c "#{pane_current_path}"
bind ^V split-window -h -p 50 -c "#{pane_current_path}"
bind s split-window -p 50 -c "#{pane_current_path}"
bind ^S split-window -p 50 -c "#{pane_current_path}"

# Split Panes
bind h split-window -h -c '#{pane_current_path}'  # Split panes horizontal
bind v split-window -v -c '#{pane_current_path}'  # Split panes vertically

## Pane management
# Saner splitting commands
bind s split-window -c "#{pane_current_path}" -v # Split panes vertically
bind v split-window -c "#{pane_current_path}" -h # Split panes horizontal

# 取消默认切分快捷键
unbind % # Split the current pane into two, left and right
unbind '"' # Split the current pane into two, top and bottom

############## panel 管理

# move between panels using hjkl like in vim up
# 可以考虑通过 -n 参数绑定到全局
bind h select-pane -L # left
bind j select-pane -D # down
bind k select-pane -U # up
bind l select-pane -R # right

# pane navigation
bind > swap-pane -D
bind < swap-pane -U

# 调节窗口大小快捷键，Pane resizing

# bind -r 表示可以重复
# 注意这里时大写，需要按住 Shift + HJKL
# Pane resize in all four directions using vi bindings.
# Can use these raw but I map them to shift-ctrl-<h,j,k,l> in iTerm.
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5
bind o resize-pane -Z



########################################
# Copy mode                            #
########################################

bind Enter copy-mode # enter copy mode
bind b list-buffers  # list paster buffers
bind B choose-buffer # choose which buffer to paste from
bind p paste-buffer  # paste from the top paste buffer
bind P run "xclip -selection clipboard -o | tmux load-buffer - ; tmux paste-buffer"

# Copy mode bind v
unbind -T copy-mode-vi v

# Use vi keybindings in copy and choice modes
# in version 2.3 and below https://github.com/tmux/tmux/commit/76d6d3641f271be1756e41494960d96714e7ee58
setw -g mode-keys vi
bind -T copy-mode-vi 'v' send -X begin-selection     # Begin selection in copy mode.
bind -T copy-mode-vi 'C-v' send -X rectangle-toggle  # Begin selection in copy mode.
bind -T copy-mode-vi 'y' send -X copy-selection      # Yank selection in copy mode.
bind -T copy-mode-vi Escape send -X cancel
bind -T copy-mode-vi C-g send -X cancel
bind -T copy-mode-vi H send -X start-of-line
bind -T copy-mode-vi L send -X end-of-line
# https://superuser.com/a/693990/298782


############# 各种窗口颜色

# 设置当前窗口格式及颜色
# change color of active window
set -g window-status-current-format '#[fg=colour234,bg=colour39]⮀#[fg=black,bg=colour39,noreverse,bold] #{?window_zoomed_flag,#[fg=colour228],} #I #(pwd="#{pane_current_path}"; echo ${pwd####*/}) #W #[fg=colour39,bg=colour234,nobold]⮀'
setw -g window-status-current-format "#[bg=brightmagenta]#[fg=colour8] #I #[fg=colour8]#[bg=colour14] #W "
# setw -g window-status-current-fg white
# setw -g window-status-current-bg colour234
# setw -g window-status-current-attr bright


# default window title colors
set -g window-status-format '#[fg=colour235,bg=colour252,bold] #I #(pwd="#{pane_current_path}"; echo ${pwd####*/}) #W '
setw -g window-status-style fg=black,bg=default,dim
#setw -g window-status-fg cyan
#setw -g window-status-bg colour234
#setw -g window-status-attr dim


# Default window with an activity alert
setw -g window-status-activity-style bg=colour237,fg=colour248 # bg=bg1, fg=fg3

# active window title colors
setw -g window-status-current-style fg=white,bg=default,dim

############# 各种 panel 颜色

# Pane number display
set -g display-panes-active-colour colour1 #fg2
set -g display-panes-colour colour237 #bg1

# set color of regular and active panes
set -g pane-border-style fg=colour245,bg=black

# Set active pane border color
set -g pane-active-border-style fg=colour39,bg=default

############# 各种栏颜色

# 对齐方式
set -g status-justify centre

# 刷新率，redraw status line every 10 seconds
# Update status-{left,right} more often (default: 15)
set -g status-interval 10 # 5, 2

# 长度，Length of tmux status line
set -g status-left-length 52 # 可选值 40
set -g status-right-length 451

# 内容，remove administrative debris (session name, hostname, time) in status bar
set -g status-left ''
# set -g status-right ''

# 颜色，set -g status-left-style bg=colour233,fg=colour243
set -g status-left '#[fg=colour235,bg=colour252,bold] ❐ #S #[fg=colour252,bg=colour238,nobold]⮀#[fg=colour245,bg=colour238,bold] #(whoami) #[fg=colour238,bg=colour234,nobold]⮀'
set -g status-right '#[fg=colour233,bg=colour241,bold] %m/%d #[fg=colour233,bg=colour245,bold] %H:%M:%S '
# set -g status-right "%H:%M"

# 默认状态栏颜色
# soften status bar color from harsh green to light gray
set -g status-style fg=white,bg=colour234
# set -g status-style bg=colour237,fg=colour223 # bg=bg1, fg=fg1

# default statusbar colors
set -g status-fg white
set -g status-bg default # 底部状态背景，可选值 colour234

# If running inside tmux ($TMUX is set), then change the status line to red
%if #{TMUX}
set -g status-bg red
%endif

########## 各种小组件颜色，clock，bell，message

# Clock
setw -g clock-mode-colour colour109 #blue

# Bell
setw -g window-status-bell-style bg=colour167,fg=colour235 # bg=red, fg=bg

# color of message bar，Message info
set -g message-style fg=colour16,bg=colour221,bold

# Writing commands inactive
set -g message-command-style bg=colour239,fg=colour223 # bg=fg3, fg=bg1

#####################################

# Patch for OS X pbpaste and pbcopy under tmux.
set -g default-command "which reattach-to-user-namespace > /dev/null && reattach-to-user-namespace -l $SHELL || $SHELL"



# address vim mode switching delay (http://superuser.com/a/252717/65504)
# No escape time for vi mode, Removes ESC delay
set -sg escape-time 0 # faster command sequences

# Screen like binding for last window
unbind l
bind C-a last-window

# Bigger history, Increase tmux history-limit
set -g history-limit 32768

# New Pane, New windows/pane in $PWD
bind c new-window -c "#{pane_current_path}"


# Fix key bindings broken in tmux 2.1
set -g assume-paste-time 0

# force a reload of the config file
# display-message "tmux config reloaded" # create new short cut to reload tmux.conf
unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded!"

#
# alias: tmux=tmux -2u
# use C-a, since it's on the home row and easier to hit than C-b
# set tmux prefix key
set -g prefix C-t
unbind C-b
bind C-t send-prefix

bind a last-window

setw -g mode-keys vi

# renumber windows when one is closed
set -g renumber-windows on


# Fix to allow mousewheel/trackpad scrolling in tmux 2.1
bind -T root WheelUpPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; copy-mode -e; send-keys -M"
bind -T root WheelDownPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; send-keys -M"


# New Session
bind enter new


########################################
# display                              #
########################################


set -g status-position top

# Change the default $TERM to tmux-256color
set -sg default-terminal "xterm-256color" # colors!

# Enable RGB colour if running in xterm(1)
set -ga terminal-overrides ",xterm-*color:Tc"

set -g set-titles on
set -g set-titles-string "[#S] $USER@#H:#{pane_current_path} #{pane_current_command}"
# set -g set-titles-string '#h ❐ #S ● #I #W'

setw -g automatic-rename on # rename window to reflect current program
set -g renumber-windows on  # renumber windows when a window is closed

set -g display-panes-time 800 # slightly longer pane indicators display time
set -g display-time 1500      # slightly longer status messages display time，或者 10000

setw -g xterm-keys on
setw -g xterm-keys on

bind y run-shell "tmux show-buffer | xclip -sel clip -i" \; display-message "Copied tmux buffer to system clipboard"
#  vim: set filetype=conf ts=4 sw=4 tw=120 noet :

# 监视窗口信息，如有内容变动，进行提示，highlight window when it has new activity
setw -g monitor-activity on
set -g visual-activity on

# Keys to toggle monitoring activity in a window and the synchronize-panes option
bind m set monitor-activity
bind y set synchronize-panes\; display 'synchronize-panes #{?synchronize-panes,on,off}'


########################################
# Local config                         #
########################################

run-shell $TMUX_HOME/extraInit

# user defined
if '[ -f ~/.tmux.conf.local ]' 'source ~/.tmux.conf.local'


# see more http://einverne.github.io/post/2017/12/tmux-plugins.html
# to install plugins:
#   add plugin and Prefix + I to install
# to update plugins:
# 	Prefix + U
# to remove plugins:
# 	Remove config and Prefix + alt + u

############# Tmux Vars

# $(echo $USER) - shows the current username
# %a --> Day of week (Mon)
# %A --> Day of week Expanded (Monday)

# %b --> Month (Jan)
# %d --> Day (31)
# %Y --> Year (2017)

# %D --> Month/Day/Year (12/31/2017)
# %v --> Day-Month-Year (31-Dec-2017)

# %r --> Hour:Min:Sec AM/PM (12:30:27 PM)
# %T --> 24 Hour:Min:Sec (16:30:27)
# %X --> Hour:Min:Sec (12:30:27)
# %R --> 24 Hour:Min (16:30)
# %H --> 24 Hour (16)
# %l --> Hour (12)
# %M --> Mins (30)
# %S --> Seconds (09)
# %p --> AM/PM (AM)

# For a more complete list view: https://linux.die.net/man/3/strftime

#colour0 (black)
#colour1 (red)
#colour2 (green)
#colour3 (yellow)
#colour4 (blue)
#colour7 (white)
#colour5 colour6 colour7 colour8 colour9 colour10 colour11 colour12 colour13 colour14 colour15 colour16 colour17

#D ()
#F ()
#H (hostname)
#I (window index)
#P ()
#S (session index)
#T (pane title)
#W (currnet task like vim if editing a file in vim or zsh if running zsh)
