###############################################################################
# => General
###############################################################################

# paste
 set-option -g default-command "reattach-to-user-namespace -l zsh"

# improve colors
set -g default-terminal 'screen-256color'

# act like vim, Use vim keybindings in copy mode
setw -g mode-keys vi
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R
bind-key -r C-h select-window -t :-
bind-key -r C-l select-window -t :+

set -g prefix2 C-s

# start window numbers at 1 to match keyboard order with tmux window order
# 窗口号和窗口分割号都以1开始（默认从0开始）
set -g base-index 1 # start windows numbering at 1
setw -g pane-base-index 1
set -g pane-base-index 1 # make pane numbering consistent with windows
set-window-option -g pane-base-index 1

# renumber windows sequentially after closing any of them
set -g renumber-windows on

# soften status bar color from harsh green to light gray
set -g status-style bg='#666666',fg='#aaaaaa'

# remove administrative debris (session name, hostname, time) in status bar
set -g status-left ''
set -g status-right ''

# increase scrollback lines
set -g history-limit 10000 # boost history

# prefix -> back-one-character
bind-key C-b send-prefix
# prefix-2 -> forward-incremental-history-search
bind-key C-s send-prefix -2

# don't suspend-client
unbind-key C-z

# Ring the bell if any background window rang a bell
set -g bell-action any

# True color and Italic support https://github.com/syl20bnr/spacemacs/wiki/Terminal
# Default termtype. If the rcfile sets $TERM, that overrides this value.
set -g default-terminal screen-256color
set -g terminal-overrides ',xterm-24bit:Tc'

# Keep your finger on ctrl, or don't
bind-key ^D detach-client

# Create splits and vertical splits
bind-key v split-window -h -p 50 -c "#{pane_current_path}"
bind-key ^V split-window -h -p 50 -c "#{pane_current_path}"
bind-key s split-window -p 50 -c "#{pane_current_path}"
bind-key ^S split-window -p 50 -c "#{pane_current_path}"

# Pane resize in all four directions using vi bindings.
# Can use these raw but I map them to shift-ctrl-<h,j,k,l> in iTerm.
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Use vi keybindings for tmux commandline input.
# Note that to get command mode you need to hit ESC twice...
set -g status-keys vi

# Use vi keybindings in copy and choice modes
setw -g mode-keys vi

# easily toggle synchronization (mnemonic: e is for echo)
# sends input to all panes in a given window.
bind e setw synchronize-panes on
bind E setw synchronize-panes off

# set first window to index 1 (not 0) to map more to the keyboard layout...
set-option -g base-index 1
set-window-option -g pane-base-index 1

# mouse behavior
set -g mouse on # Enable mouse mode (tmux 2.1 and above)
set-option -g mouse on
set-window-option -g mouse on # Enable mouse mode (tmux 2.1 and above)

# color scheme (styled as vim-powerline)
set -g status-left-length 52
set -g status-right-length 451
set -g status-style fg=white,bg=colour234
set -g pane-border-style fg=colour245
set -g pane-active-border-style fg=colour39
set -g message-style fg=colour16,bg=colour221,bold
set -g status-left '#[fg=colour235,bg=colour252,bold] ❐ #S #[fg=colour252,bg=colour238,nobold]⮀#[fg=colour245,bg=colour238,bold] #(whoami) #[fg=colour238,bg=colour234,nobold]⮀'
set -g window-status-format '#[fg=colour235,bg=colour252,bold] #I #(pwd="#{pane_current_path}"; echo ${pwd####*/}) #W '
set -g window-status-current-format '#[fg=colour234,bg=colour39]⮀#[fg=black,bg=colour39,noreverse,bold] #{?window_zoomed_flag,#[fg=colour228],} #I #(pwd="#{pane_current_path}"; echo ${pwd####*/}) #W #[fg=colour39,bg=colour234,nobold]⮀'
set-option -g status-interval 2

# Patch for OS X pbpaste and pbcopy under tmux.
set-option -g default-command "which reattach-to-user-namespace > /dev/null && reattach-to-user-namespace -l $SHELL || $SHELL"

# Screen like binding，键位绑定，类似 vim 的命令模式
# C-b + ? 查看所有可用的命令及相应的快捷键
unbind C-b
set -g prefix C-a
bind a send-prefix

# No escape time for vi mode, Removes ESC delay
set -sg escape-time 0

# Screen like binding for last window
unbind l
bind C-a last-window

# Bigger history, Increase tmux history-limit
set -g history-limit 32768

# New windows/pane in $PWD
bind c new-window -c "#{pane_current_path}"

# Fix key bindings broken in tmux 2.1
set -g assume-paste-time 0

# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# Local config
if-shell "[ -f ~/.tmux.conf.user ]" 'source ~/.tmux.conf.user'

#
# alias: tmux=tmux -2u
# use C-a, since it's on the home row and easier to hit than C-b
# set tmux prefix key
set-option -g prefix C-t
unbind-key C-b
bind-key C-t send-prefix

bind a last-window

setw -g mode-keys vi

# highlight window when it has new activity
setw -g monitor-activity on
set -g visual-activity on

# renumber windows when one is closed
set -g renumber-windows on

# Easy config reload
bind-key R source-file ~/.tmux.conf \; display-message "tmux.conf reloaded."




# Fix to allow mousewheel/trackpad scrolling in tmux 2.1
bind-key -T root WheelUpPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; copy-mode -e; send-keys -M"
bind-key -T root WheelDownPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; send-keys -M"

# increase scroll-back history
set -g history-limit 50000

# show tmux messages for 4 seconds
set -g display-time 4000

# New Pane
bind c new-window -c "#{pane_current_path}"

# New Session
bind enter new

# Split Panes
bind h split-window -h -c '#{pane_current_path}'  # Split panes horizontal
bind v split-window -v -c '#{pane_current_path}'  # Split panes vertically

# focus events enabled for terminals that support them
set -g focus-events on

# super useful when using "grouped sessions" and multi-monitor setup
setw -g aggressive-resize on

# default statusbar colors
set -g status-fg white
set -g status-bg default

# default window title colors
set-window-option -g window-status-style fg=black,bg=default,dim

# active window title colors
set-window-option -g window-status-current-style fg=white,bg=default,dim

# command/message line colors
set -g message-style fg=white,bg=black,bright

# address vim mode switching delay (http://superuser.com/a/252717/65504)
set -s escape-time 0 # faster command sequences

set -g default-terminal "xterm-256color" # colors!
set-option -ga terminal-overrides ",xterm-*color:Tc"

set -g set-titles on
set -g set-titles-string "[#S] $USER@#H:#{pane_current_path} #{pane_current_command}"

set-window-option -g xterm-keys on
setw -g xterm-keys on

bind y run-shell "tmux show-buffer | xclip -sel clip -i" \; display-message "Copied tmux buffer to system clipboard"
#  vim: set filetype=conf ts=4 sw=4 tw=120 noet :
